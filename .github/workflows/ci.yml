# This is based on ripgrep:
# https://github.com/BurntSushi/ripgrep/blob/master/.github/workflows/ci.yml

name: ci
on:
    pull_request:
    push:
        branches:
jobs:
    test:
        name: test
        env:
            # For some builds, we use cross to test on 32-bit and big-endian
            # systems.
            CARGO: cargo
            # When CARGO is set to CROSS, this is set to `--target matrix.target`.
            TARGET_FLAGS:
            # When CARGO is set to CROSS, TARGET_DIR includes matrix.target.
            TARGET_DIR: ./target
            # Emit backtraces on panics.
            RUST_BACKTRACE: 1
        runs-on: ${{ matrix.os }}
        strategy:
            matrix:
                build:
                    - stable
                    - beta
                    # Our release builds are generated by a nightly compiler to take
                    # advantage of the latest optimizations/compile time improvements. So
                    # we test all of them here.
                    - nightly
                    - macos
                    - win-msvc
                    - win-gnu
                include:
                    - build: stable
                      os: ubuntu-18.04
                      rust: stable
                    - build: beta
                      os: ubuntu-18.04
                      rust: beta

                    - build: nightly
                      os: ubuntu-18.04
                      rust: nightly

                    - build: macos
                      os: macos-latest
                      rust: nightly

                    - build: win-msvc
                      os: windows-2019
                      rust: nightly

                    - build: win-gnu
                      os: windows-2019
                      rust: nightly-x86_64-gnu
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
              with:
                  submodules: recursive

            - name: Set up cache
              uses: Swatinem/rust-cache@v1

            - name: Setup cmake
              uses: lukka/get-cmake@latest

            - name: Install Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: ${{ matrix.rust }}
                  profile: minimal
                  override: true

              # this is based on zstd's ci build files
            - name: Add mingw64 to path for x86_64-gnu
              run: echo "C:\msys64\mingw64\bin" >> $GITHUB_PATH
              if: matrix.build == 'win-gnu'
              shell: bash

            - name: Use Cross
              if: matrix.target != ''
              run: |
                  # FIXME: to work around bugs in latest cross release, install master.
                  # See: https://github.com/rust-embedded/cross/issues/357
                  cargo install --git https://github.com/rust-embedded/cross
                  echo "CARGO=cross" >> $GITHUB_ENV
                  echo "TARGET_FLAGS=--target ${{ matrix.target }}" >> $GITHUB_ENV
                  echo "TARGET_DIR=./target/${{ matrix.target }}" >> $GITHUB_ENV
            - name: Show command used for Cargo
              run: |
                  echo "cargo command is: ${{ env.CARGO }}"
                  echo "target flag is: ${{ env.TARGET_FLAGS }}"
            - name: Build sc_extract
              run: ${{ env.CARGO }} build --verbose --all ${{ env.TARGET_FLAGS }}

            - name: Run tests
              run: ${{ env.CARGO }} test --verbose --all ${{ env.TARGET_FLAGS }}

    rustfmt:
        name: rustfmt
        runs-on: ubuntu-18.04
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
            - name: Install Rust
              uses: actions-rs/toolchain@v1
              with:
                  toolchain: stable
                  override: true
                  profile: minimal
                  components: rustfmt
            - name: Check formatting
              run: |
                  cargo fmt --all -- --check
